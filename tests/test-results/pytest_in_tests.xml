<?xml version="1.0" encoding="UTF-8"?><testrun duration="250781" footerText="Generated by PyCharm on 15/05/2022, 14:26" name="pytest in tests">
    <count name="total" value="48"/>
    <count name="failed" value="3"/>
    <count name="ignored" value="2"/>
    <count name="passed" value="43"/>
    <config nameIsGenerated="true" configId="tests" name="pytest in tests">
        <log_file alias="test-results" path="/Users/blota/code/flexiznam/tests/test-results"/>
        <module name="flexiznam"/>
        <option name="INTERPRETER_OPTIONS" value=""/>
        <option name="PARENT_ENVS" value="true"/>
        <option name="SDK_HOME" value=""/>
        <option name="WORKING_DIRECTORY" value="/Users/blota/code/flexiznam/tests"/>
        <option name="IS_MODULE_SDK" value="true"/>
        <option name="ADD_CONTENT_ROOTS" value="true"/>
        <option name="ADD_SOURCE_ROOTS" value="true"/>
        <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py"/>
        <option name="_new_keywords" value="&quot;&quot;"/>
        <option name="_new_parameters" value="&quot;&quot;"/>
        <option name="_new_additionalArguments" value="&quot;&quot;"/>
        <option name="_new_target" value="&quot;/Users/blota/code/flexiznam/tests&quot;"/>
        <option name="_new_targetType" value="&quot;PATH&quot;"/>
        <method v="2"/>
    </config>
    <suite duration="250781" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests" name="tests" status="failed">
        <suite duration="18966" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_2p" name="test_2p" status="passed">
            <test duration="8851" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_2p.test_create_yaml" name="test_create_yaml" metainfo="test_create_yaml" status="passed">
                <output type="stdout">PASSED                                      [  2%]Ignored 2 SI tif
Ignored 0 SI tif
Ignored 9 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 5 SI tif
</output>
            </test>
            <test duration="3186" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_2p.test_parse_yaml" name="test_parse_yaml" metainfo="test_parse_yaml" status="passed">
                <output type="stdout">PASSED                                       [  4%]Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 2 SI tif
Looking for camera
Found metadata and timestamps for 5 cameras: {'wf_camera', 'face_camera', 'right_eye_camera', 'butt_camera', 'left_eye_camera'}
Looking for harp
wf_camera_data.bin is not a binary harp file: `_harpmessage_` is not in file name.
5 csv files did not match any binary file:
    wf_camera_timestamps.csv
    right_eye_camera_timestamps.csv
    left_eye_camera_timestamps.csv
    butt_camera_timestamps.csv
    face_camera_timestamps.csv
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Found metadata and timestamps for 4 cameras: {'left_eye_camera', 'face_camera', 'butt_camera', 'right_eye_camera'}
Looking for harp
4 csv files did not match any binary file:
    butt_camera_timestamps.csv
    right_eye_camera_timestamps.csv
    left_eye_camera_timestamps.csv
    face_camera_timestamps.csv
Looking for scanimage
8 csv files did not match any scanimage acquisition:
    right_eye_camera_timestamps.csv
    left_eye_camera_timestamps.csv
    PZAD9.4d_S20211102_R173917_SpheresPermTube_NewParams.csv
    PZAD9.4d_S20211102_R173917_SpheresPermTube_FrameLog.csv
    butt_camera_timestamps.csv
    PZAD9.4d_S20211102_R173917_SpheresPermTube_PhotodiodeLog.csv
    face_camera_timestamps.csv
    PZAD9.4d_S20211102_R173917_SpheresPermTube_RotaryEncoder.csv
Looking for microscopy
Ignored 9 SI tif
</output>
            </test>
            <test duration="6929" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_2p.test_flm" name="test_flm" metainfo="test_flm" status="passed">
                <output type="stdout">PASSED                                              [  6%]Ignored 2 SI tif
Ignored 0 SI tif
Ignored 9 SI tif
A session named mouse_physio_2p_S20211102 already exists
Warning: ['csv_files'] is/are empty and will be uploaded as None on flexilims.
Already up to date, nothing to do
Warning: ['csv_files'] is/are empty and will be uploaded as None on flexilims.
Already up to date, nothing to do
Warning: ['csv_files'] is/are empty and will be uploaded as None on flexilims.
Already up to date, nothing to do
A recording named mouse_physio_2p_S20211102_R165821_SpheresPermTube already exists
Already up to date, nothing to do
Already up to date, nothing to do
Already up to date, nothing to do
Already up to date, nothing to do
Already up to date, nothing to do
Already up to date, nothing to do
A recording named mouse_physio_2p_S20211102_R173917_SpheresPermTube already exists
Already up to date, nothing to do
Already up to date, nothing to do
Already up to date, nothing to do
Already up to date, nothing to do
Already up to date, nothing to do
Already up to date, nothing to do
</output>
            </test>
        </suite>
        <suite duration="16764" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_barseq" name="test_barseq" status="passed">
            <test duration="2989" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_barseq.test_create_yaml" name="test_create_yaml" metainfo="test_create_yaml" status="passed">
                <output type="stdout">PASSED                                  [  8%]
</output>
            </test>
            <test duration="5125" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_barseq.test_parse_yaml" name="test_parse_yaml" metainfo="test_parse_yaml" status="passed">
                <output type="stdout">PASSED                                   [ 10%]Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Found 1 tif files that are NOT scanimage data.
    slide_001_overview.tif
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
</output>
            </test>
            <test duration="8650" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_barseq.test_flm" name="test_flm" metainfo="test_flm" status="passed">
                <output type="stdout">PASSED                                          [ 12%]Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Found 1 tif files that are NOT scanimage data.
    slide_001_overview.tif
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
Looking for camera
Looking for harp
Looking for scanimage
Looking for microscopy
Ignored 0 SI tif
A sample named mouse_barseq_brain already exists
A sample named mouse_barseq_brain_slide_001 already exists
Already up to date, nothing to do
A sample named mouse_barseq_brain_slide_001_section_01 already exists
Already up to date, nothing to do
Already up to date, nothing to do
A sample named mouse_barseq_brain_slide_001_section_01_cycle_01 already exists
Already up to date, nothing to do
Already up to date, nothing to do
A sample named mouse_barseq_brain_slide_002 already exists
A sample named mouse_barseq_brain_slide_003 already exists
A sample named mouse_barseq_brain_slide_003_section_02 already exists
A sample named mouse_barseq_brain_slide_006 already exists
A sample named mouse_barseq_brain_slide_006_section_02 already exists
Already up to date, nothing to do
Already up to date, nothing to do
A sample named mouse_barseq_brain_slide_006_section_02_cycle_01 already exists
Already up to date, nothing to do
A sample named mouse_barseq_brain_slide_006_section_02_cycle_02 already exists
Already up to date, nothing to do
A sample named mouse_barseq_brain_slide_006_section_02_cycle_03 already exists
Already up to date, nothing to do
A sample named mouse_barseq_brain_slide_006_section_02_cycle_04 already exists
Already up to date, nothing to do
A sample named mouse_barseq_brain_slide_006_section_02_cycle_05 already exists
Already up to date, nothing to do
A sample named mouse_barseq_brain_slide_006_section_02_cycle_06 already exists
Already up to date, nothing to do
A sample named mouse_barseq_brain_slide_006_section_02_cycle_07 already exists
Already up to date, nothing to do
A sample named mouse_barseq_brain_slide_006_section_02_cycle_18 already exists
Already up to date, nothing to do
A sample named mouse_barseq_retina_L already exists
A sample named mouse_barseq_retina_R already exists
</output>
            </test>
        </suite>
        <suite duration="140" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_brainsaw" name="test_brainsaw" status="failed">
            <test duration="14" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_brainsaw.test_create_yaml" name="test_create_yaml" metainfo="test_create_yaml" status="failed">
                <output type="stdout">FAILED                                [ 14%]
</output>
                <output type="stderr">tests/test_brainsaw.py:23 (test_create_yaml)def test_create_yaml():
        """Test automatic yaml creation
    
        We check that the acquisition yaml can also be created automatically
        """
        saved_skeleton = PROCESSED_ROOT / MOUSE / YAML.replace('.yml',
                                                               'automatic_skeletion.yml')
        # To save the yaml the first time we add outfile:
&gt;       automat = create_yaml(DATA_ROOT / MOUSE, mouse=MOUSE,
                              project=TEST_PROJECT, outfile=saved_skeleton, overwrite=True)
test_brainsaw.py:32: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
root_folder = PosixPath('/Volumes/lab-znamenskiyp/data/instruments/raw_data/projects/demo_project/mouse_brainsaw')
outfile = PosixPath('/Volumes/lab-znamenskiyp/home/shared/projects/demo_project/mouse_brainsaw/brainsaw_yamlautomatic_skeletion.yml')
project = 'demo_project', mouse = 'mouse_brainsaw', overwrite = True
    def create_yaml(root_folder, outfile=None, project='NOT SPECIFIED',
                    mouse='NOT SPECIFIED', overwrite=False):
        """Automatically create a yaml file skeleton
    
        Goes recursively in root folder and create a set of nested structure
    
        Args:
            root_folder (str or Path): base folder, usually a session but can be a sample
            outfile (str or Path): target to write the yaml. Do not write file if `None`
            project (str): name of the project
            mouse (str): name of the mouse
            overwrite (bool): overwrite outfile if it exists. Default False.
    
        Returns:
            yaml_dict (dict): created structure
        """
        root_folder = pathlib.Path(root_folder)
&gt;       assert root_folder.is_dir()
E       AssertionError
../flexiznam/camp/sync_data.py:34: AssertionError
</output>
            </test>
            <test duration="12" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_brainsaw.test_parse_yaml" name="test_parse_yaml" metainfo="test_parse_yaml" status="failed">
                <output type="stdout">FAILED                                 [ 16%]
</output>
                <output type="stderr">tests/test_brainsaw.py:41 (test_parse_yaml)def test_parse_yaml():
        """Test that we can parse the acq yaml
    
        We check that we can parse the yaml and that the output is similar to a known copy
        """
&gt;       parsed = parse_yaml(path_to_yaml=PROCESSED_ROOT / MOUSE / YAML,
                                               raw_data_folder=DATA_ROOT)
test_brainsaw.py:47: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../flexiznam/camp/sync_data.py:96: in parse_yaml
    session_data = _clean_yaml(path_to_yaml)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
path_to_yaml = PosixPath('/Volumes/lab-znamenskiyp/home/shared/projects/demo_project/mouse_brainsaw/brainsaw_yaml.yml')
    def _clean_yaml(path_to_yaml):
        """Read a yaml file and check that it is correctly formatted
    
        This does not do any processing, just make sure that I can read the whole yaml and
        generate dictionary will all expected fields
    
        Args:
            path_to_yaml (str): path to the YAML file, or dict of the yaml content
    
        Returns:
            dict: nested dictionary containing entries in the YAML file
    
        """
    
        if isinstance(path_to_yaml, dict):
            yml_data = path_to_yaml
        else:
&gt;           with open(path_to_yaml, 'r') as yml_file:
E           FileNotFoundError: [Errno 2] No such file or directory: '/Volumes/lab-znamenskiyp/home/shared/projects/demo_project/mouse_brainsaw/brainsaw_yaml.yml'
../flexiznam/camp/sync_data.py:472: FileNotFoundError
</output>
            </test>
            <test duration="114" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_brainsaw.test_flm" name="test_flm" metainfo="test_flm" status="failed">
                <diff actual="None" expected="None"/>
                <output type="stdout">FAILED                                        [ 18%]
</output>
                <output type="stderr">tests/test_brainsaw.py:62 (test_flm)
None != None
def test_flm():
        """Check that we can upload to flexilims if the database is wiped"""
        if FLM_IS_WIPED:
            # there shouldn't be anything in the way, if there is we have an issue
            conflicts = 'abort'
        else:
            # entries already exist, just skip them. Will still crash if there is dataset
            # that has changed.
            conflicts = 'skip'
&gt;       physio_mouse_exists()
test_brainsaw.py:72:
</output>
            </test>
        </suite>
        <suite duration="214911" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components" name="test_components" status="ignored">
            <suite duration="43501" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.test_cli" name="test_cli" status="passed">
                <test duration="22" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.test_cli.test_config" name="test_config" metainfo="test_config" status="passed">
                    <output type="stdout">PASSED                          [ 20%]
</output>
                </test>
                <test duration="6" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.test_cli.test_add_password" name="test_add_password" metainfo="test_add_password" status="passed">
                    <output type="stdout">PASSED                    [ 22%]
</output>
                </test>
                <test duration="400" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.test_cli.test_create_yaml" name="test_create_yaml" metainfo="test_create_yaml" status="passed">
                    <output type="stdout">PASSED                     [ 25%]
</output>
                </test>
                <test duration="10791" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.test_cli.test_make_full_yaml" name="test_make_full_yaml" metainfo="test_make_full_yaml" status="passed">
                    <output type="stdout">PASSED                  [ 27%]
</output>
                </test>
                <test duration="14342" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.test_cli.test_upload" name="test_upload" metainfo="test_upload" status="passed">
                    <output type="stdout">PASSED                          [ 29%]
</output>
                </test>
                <test duration="17940" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.test_cli.test_flm_issues" name="test_flm_issues" metainfo="test_flm_issues" status="passed">
                    <output type="stdout">PASSED                      [ 31%]
</output>
                </test>
            </suite>
            <suite duration="3219" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.test_main" name="test_main" status="passed">
                <test duration="162" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.test_main.test_get_flexilims_session" name="test_get_flexilims_session" metainfo="test_get_flexilims_session" status="passed">
                    <output type="stdout">PASSED          [ 33%]
</output>
                </test>
                <test duration="1" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.test_main.test_format_results" name="test_format_results" metainfo="test_format_results" status="passed">
                    <output type="stdout">PASSED                 [ 35%]
</output>
                </test>
                <test duration="206" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.test_main.test_get_experimental_sessions" name="test_get_experimental_sessions" metainfo="test_get_experimental_sessions" status="passed">
                    <output type="stdout">PASSED      [ 37%]
</output>
                </test>
                <test duration="321" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.test_main.test_get_entities" name="test_get_entities" metainfo="test_get_entities" status="passed">
                    <output type="stdout">PASSED                   [ 39%]
</output>
                </test>
                <test duration="38" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.test_main.test_get_entity" name="test_get_entity" metainfo="test_get_entity" status="passed">
                    <output type="stdout">PASSED                     [ 41%]
</output>
                </test>
                <test duration="123" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.test_main.test_get_mouse_id" name="test_get_mouse_id" metainfo="test_get_mouse_id" status="passed">
                    <output type="stdout">PASSED                   [ 43%]
</output>
                </test>
                <test duration="631" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.test_main.test_generate_name" name="test_generate_name" metainfo="test_generate_name" status="passed">
                    <output type="stdout">PASSED                  [ 45%]
</output>
                </test>
                <test duration="152" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.test_main.test_get_children" name="test_get_children" metainfo="test_get_children" status="passed">
                    <output type="stdout">PASSED                   [ 47%]
</output>
                </test>
                <test duration="487" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.test_main.test_add_entity" name="test_add_entity" metainfo="test_add_entity" status="passed">
                    <output type="stdout">PASSED                     [ 50%]
</output>
                </test>
                <test duration="1098" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.test_main.test_update_entity" name="test_update_entity" metainfo="test_update_entity" status="passed">
                    <output type="stdout">PASSED                  [ 52%]Setting `acq_uid` to None. Reply will contain an empty list
Setting `stack_type` to None. Reply will contain an empty list
Setting `created` to None. Reply will contain an empty list
Setting `file_stem` to None. Reply will contain an empty list
Setting `csv_files` to None. Reply will contain an empty list
Setting `acq_num` to None. Reply will contain an empty list
Setting `tif_files` to None. Reply will contain an empty list
Setting `genealogy` to None. Reply will contain an empty list
Setting `csv_files` to None. Reply will contain an empty list
</output>
                </test>
            </suite>
            <suite duration="0" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.test_mcms" name="test_mcms" status="ignored">
                <test duration="0" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.test_mcms.test_download_mouse" name="test_download_mouse" metainfo="test_download_mouse" status="ignored">
                    <output type="stdout">SKIPPED (need --ru...) [ 54%]
</output>
                </test>
                <test duration="0" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.test_mcms.test_get_mouse_df" name="test_get_mouse_df" metainfo="test_get_mouse_df" status="ignored">
                    <output type="stdout">SKIPPED (need --runs...) [ 56%]
</output>
                </test>
            </suite>
            <suite duration="163217" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.test_utils" name="test_utils" status="passed">
                <test duration="22" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.test_utils.test_create_config" name="test_create_config" metainfo="test_create_config" status="passed">
                    <output type="stdout">PASSED                 [ 58%]
</output>
                </test>
                <test duration="21" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.test_utils.test_update_config" name="test_update_config" metainfo="test_update_config" status="passed">
                    <output type="stdout">PASSED                 [ 60%]
</output>
                </test>
                <test duration="16" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.test_utils.test_passwd_creation" name="test_passwd_creation" metainfo="test_passwd_creation" status="passed">
                    <output type="stdout">PASSED               [ 62%]
</output>
                </test>
                <test duration="20639" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.test_utils.test_check_flexilims_paths" name="test_check_flexilims_paths" metainfo="test_check_flexilims_paths" status="passed">
                    <output type="stdout">PASSED         [ 64%]
</output>
                </test>
                <test duration="19083" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.test_utils.test_check_flexilims_names" name="test_check_flexilims_names" metainfo="test_check_flexilims_names" status="passed">
                    <output type="stdout">PASSED         [ 66%]
</output>
                </test>
                <test duration="113036" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.test_utils.test_add_genealogy" name="test_add_genealogy" metainfo="test_add_genealogy" status="passed">
                    <output type="stdout">PASSED                 [ 68%]
</output>
                </test>
                <test duration="10400" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.test_utils.test_add_missing_paths" name="test_add_missing_paths" metainfo="test_add_missing_paths" status="passed">
                    <output type="stdout">PASSED             [ 70%]
</output>
                </test>
            </suite>
            <suite duration="4974" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.tests_schema" name="tests_schema" status="passed">
                <suite duration="965" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.tests_schema.test_camera_data" name="test_camera_data" status="passed">
                    <test duration="1" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.tests_schema.test_camera_data.test_create_directly" name="test_create_directly" metainfo="test_create_directly" status="passed">
                        <output type="stdout">PASSED [ 72%]
</output>
                    </test>
                    <test duration="295" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.tests_schema.test_camera_data.test_create_from_folder" name="test_create_from_folder" metainfo="test_create_from_folder" status="passed">
                        <output type="stdout">PASSED [ 75%]
</output>
                    </test>
                    <test duration="669" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.tests_schema.test_camera_data.test_create_from_flexilims" name="test_create_from_flexilims" metainfo="test_create_from_flexilims" status="passed">
                        <output type="stdout">PASSED [ 77%]
</output>
                    </test>
                </suite>
                <suite duration="3308" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.tests_schema.test_datasets" name="test_datasets" status="passed">
                    <test duration="1" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.tests_schema.test_datasets.test_dataset" name="test_dataset" metainfo="test_dataset" status="passed">
                        <output type="stdout">PASSED       [ 79%]
</output>
                    </test>
                    <test duration="1" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.tests_schema.test_datasets.test_constructor" name="test_constructor" metainfo="test_constructor" status="passed">
                        <output type="stdout">PASSED   [ 81%]
</output>
                    </test>
                    <test duration="287" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.tests_schema.test_datasets.test_dataset_flexilims_integration" name="test_dataset_flexilims_integration" metainfo="test_dataset_flexilims_integration" status="passed">
                        <output type="stdout">PASSED [ 83%]
</output>
                    </test>
                    <test duration="259" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.tests_schema.test_datasets.test_from_flexilims" name="test_from_flexilims" metainfo="test_from_flexilims" status="passed">
                        <output type="stdout">PASSED [ 85%]
</output>
                    </test>
                    <test duration="508" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.tests_schema.test_datasets.test_from_origin" name="test_from_origin" metainfo="test_from_origin" status="passed">
                        <output type="stdout">PASSED   [ 87%]
</output>
                    </test>
                    <test duration="2133" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.tests_schema.test_datasets.test_update_flexilims" name="test_update_flexilims" metainfo="test_update_flexilims" status="passed">
                        <output type="stdout">PASSED [ 89%]
</output>
                    </test>
                    <test duration="119" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.tests_schema.test_datasets.test_dataset_paths" name="test_dataset_paths" metainfo="test_dataset_paths" status="passed">
                        <output type="stdout">PASSED [ 91%]
</output>
                    </test>
                    <test duration="0" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.tests_schema.test_datasets.test_project_project_id" name="test_project_project_id" metainfo="test_project_project_id" status="passed">
                        <output type="stdout">PASSED [ 93%]
</output>
                    </test>
                </suite>
                <suite duration="209" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.tests_schema.test_harp" name="test_harp" status="passed">
                    <test duration="209" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.tests_schema.test_harp.test_harp" name="test_harp" metainfo="test_harp" status="passed">
                        <output type="stdout">PASSED              [ 95%]
</output>
                    </test>
                </suite>
                <suite duration="56" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.tests_schema.test_microscopy_data" name="test_microscopy_data" status="passed">
                    <test duration="56" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.tests_schema.test_microscopy_data.test_from_folder" name="test_from_folder" metainfo="test_from_folder" status="passed">
                        <output type="stdout">PASSED [ 97%]Ignored 0 SI tif
</output>
                    </test>
                </suite>
                <suite duration="436" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.tests_schema.test_scanimage_data" name="test_scanimage_data" status="passed">
                    <test duration="436" locationUrl="python&lt;/Users/blota/code/flexiznam/tests&gt;://tests.test_components.tests_schema.test_scanimage_data.test_scanimage" name="test_scanimage" metainfo="test_scanimage" status="passed">
                        <output type="stdout">PASSED [100%]
</output>
                    </test>
                </suite>
            </suite>
        </suite>
    </suite>
</testrun>
